<%- include("settings/header") %>
<%- include("settings/nav") %>
<%- include("settings/top") %>

<style>
#chat-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
}
#messages {
  flex: 1;
  overflow-y: scroll;
  padding: 10px;
  width: 100%;
  box-sizing: border-box;
  background: #fafafa;
}
.message-bubble {
  background-color: #fff;
  padding: 10px;
  margin: 5px 0;
  border-radius: 8px;
  width: fit-content;
  border: 1px solid #000;
  max-width: 90%;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}
.message-item {
  margin-bottom: 10px;
}
.meta {
  font-size: 0.75em;
  color: #aaa;
  margin-bottom: 5px;
}
.text {
  word-break: break-word;
  font-size: 1em;
}
#input {
  flex: 1;
  padding: 10px;
  font-size: 1em;
  width: 1000px;
  border: 1px solid #ccc;
  border-radius: 4px;
  margin-right: 10px;
}
#sendButton {
  padding: 15px 20px !important;
  font-size: 30px !important;
  width: 105px;
  height: 70px;
}
</style>

<div id="chat-container">
<div id="messages"></div>
  <h2><input class="chatText" id="input" maxlength="100" autocomplete="off" /></h2>
  <button class="blueButton30" id="sendButton">送信</button>
<br>
</div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
  function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
    return null;
  }

  const username = getCookie("user") || "匿名";
  const socket = io({
    auth: { username: username }
  });

  const input = document.getElementById('input');
  const messages = document.getElementById('messages');

  socket.on('chat history', (history) => {
    messages.innerHTML = '';
    history.forEach(msg => {
      appendMessage(msg);
    });
  });

  socket.on('chat message', (msg) => {
    appendMessage(msg);
  });

  document.getElementById('sendButton').addEventListener('click', () => {
    const message = input.value.trim();
    if (message.length > 100) {
      alert("メッセージは100文字以内で入力してください。");
      return;
    }
    if (message) {
      socket.emit('chat message', message);
      input.value = '';
    }
  });
  
  function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return decodeURIComponent(parts.pop().split(';').shift());
    return null;
  }
  
  function appendMessage(msg) {
    const item = document.createElement('div');
    item.classList.add('message-item');
  
    item.innerHTML = `
      <div class="message-bubble">
        <div class="meta">
          <strong>${escapeHtml(msg.username)}</strong> | ${escapeHtml(msg.timestamp)}
        </div>
        <div class="text">${escapeHtml(msg.message)}</div>
      </div>
      `;
    
    messages.appendChild(item);
    messages.scrollTop = messages.scrollHeight;
  }

  function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
  }
</script>
<script src="/chat.js"></script>

<%- include("settings/footer") %>